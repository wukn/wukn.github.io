<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wukn blog</title>
    <link>https://wukn.github.io/</link>
    <description>Recent content on wukn blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 08 Jul 2018 22:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://wukn.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[代码整洁之道]专业主义</title>
      <link>https://wukn.github.io/2018/07/08/clean-coder-professionalism/</link>
      <pubDate>Sun, 08 Jul 2018 22:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/07/08/clean-coder-professionalism/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;你确实想成为专业的软件工程师，对吧？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]并发编程</title>
      <link>https://wukn.github.io/2018/06/24/clean-code-concurrent-programming/</link>
      <pubDate>Sun, 24 Jun 2018 12:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/24/clean-code-concurrent-programming/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;对象是过程的抽象。线程是调度的抽象。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]类</title>
      <link>https://wukn.github.io/2018/06/22/clean-code-class/</link>
      <pubDate>Fri, 22 Jun 2018 22:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/22/clean-code-class/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;除了代码语句及由代码语句构成的函数的表达力，我们还需要关注一下代码组织的更高层面，否则始终得不到整洁的代码。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]单元测试</title>
      <link>https://wukn.github.io/2018/06/20/clean-code-unit-test/</link>
      <pubDate>Wed, 20 Jun 2018 22:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/20/clean-code-unit-test/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;敏捷和TDD运动鼓舞了许多程序员编写自动化单元测试。单元测试能确保代码中的每个犄角旮旯能能如愿地工作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]边界</title>
      <link>https://wukn.github.io/2018/06/08/clean-code-boundry/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/08/clean-code-boundry/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在软件中，我们通常会使用第三方程序包或使用开源代码，有时候还会使用公司中其他团队打造的组件或子系统。不管哪种情况，我们都得将外来代码干净利落地整合进自己的代码中。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]错误处理</title>
      <link>https://wukn.github.io/2018/06/06/clean-code-error-handling/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/06/clean-code-error-handling/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;错误处理只不过是编程时必须要做的事之一。当错误发生时，程序员就有责任确保代码正常工作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]对象和数据结构</title>
      <link>https://wukn.github.io/2018/06/04/clean-code-object-and-data-structure/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/04/clean-code-object-and-data-structure/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;将变量设置为private有一个理由：我们不想让其他人依赖这些变量。我们还想在心血来潮时能自由修改其类型或实现。那么，为什么还有那么多程序员给对象自动添加赋值器和取值器，将私有变量公之于众、如同它们根本就是公共变量一般呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]格式</title>
      <link>https://wukn.github.io/2018/06/03/clean-code-style/</link>
      <pubDate>Sun, 03 Jun 2018 10:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/03/clean-code-style/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;你应该保持良好的代码格式。应该选用一套管理代码格式的简单规则，然后贯彻这些规则。格式很重要。代码格式关乎沟通，而沟通是专业开发者的头等大事。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]注释</title>
      <link>https://wukn.github.io/2018/06/03/clean-code-comment/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/03/clean-code-comment/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;什么也比不上放置良好的注释来得有用。什么也不会比乱七八糟的注释更有本事搞乱一个模块。什么也不会比陈旧、提出错误信息的注释更有破坏性。若变成语言足够有表达力，或者我们长于用这些语言来表达意图，就不那么需要注释了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]函数</title>
      <link>https://wukn.github.io/2018/06/02/clean-code-function/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/02/clean-code-function/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;函数是所有程序中的第一组代码。一起看看如何写好函数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]有意义的命名</title>
      <link>https://wukn.github.io/2018/05/30/clean-code-meaningful-names/</link>
      <pubDate>Wed, 30 May 2018 23:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/30/clean-code-meaningful-names/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;软件之中随处可见命名。我们给变量、函数、参数、类和包命名。我们给源代码及源代码所在目录命名。我们给jar文件命名。既然有那么多命名要做，不妨做好它。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[代码整洁之道]整洁代码</title>
      <link>https://wukn.github.io/2018/05/27/clean-code-clean-code/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/27/clean-code-clean-code/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;细节之中自有天地，整洁成就卓越代码。代码质量与其整洁度成正比。干净的代码，既在质量上较为可靠，也为后期维护、升级奠定了良好了基础。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]软件架构——软件运维</title>
      <link>https://wukn.github.io/2018/05/26/architecutre-talks-software-operation/</link>
      <pubDate>Sat, 26 May 2018 22:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/26/architecutre-talks-software-operation/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;软件生命周期在拆分后，相对于软件运行生命周期，软件的开发生命周期实际上变成了非核心生命周期，只是为了生产软件而服务。而软件的运行生命周期才是真正的软件核心生命周期。运维才是软件真正的核心竞争力。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]软件架构——软件架构和设计模式、系统框架</title>
      <link>https://wukn.github.io/2018/05/25/architecutre-talks-software-architecture-and-design-pattern-and-frame/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/25/architecutre-talks-software-architecture-and-design-pattern-and-frame/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;软件工程师做着做着就会接触到设计模式。初学设计模式会惊为天人，然后以为设计模式就是架构。但慢慢到一定阶段后就开始习以为常，不再谈设计模式，而是开始孜孜不倦地学习架构。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]软件架构——软件架构和面向对象</title>
      <link>https://wukn.github.io/2018/05/23/architecutre-talks-software-architecture-and-object-oriented/</link>
      <pubDate>Wed, 23 May 2018 23:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/23/architecutre-talks-software-architecture-and-object-oriented/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;大部分人讨论面向对象其实是面向对象编程语言的特性。和面向对象相对的是面向过程。可是面向对象和面向过程不仅仅是编程语言，还是两种不同的思维方式。这两种不同的思维方式也不是相互对立的，就如同硬币的正反面缺一不可。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]软件架构——如何写好代码</title>
      <link>https://wukn.github.io/2018/05/11/architecutre-talks-write-good-code/</link>
      <pubDate>Wed, 16 May 2018 23:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/11/architecutre-talks-write-good-code/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;代码是最容易写的，因为随便怎么写，只要符合语法就能够运行起来。代码也是最难写的，要想让代码容易维护，还要和业务一起长大，使得软件架构容易随着业务的长大做出新的拆分、合并，并要保证准确性。同时达到这么多要求是非常困难的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]软件架构——软件的架构拆分</title>
      <link>https://wukn.github.io/2018/05/14/architecutre-talks-software-architeture/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/14/architecutre-talks-software-architeture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;众所周知软件需要拆分。但是如何拆分，根据什么原则拆分，却众说纷纭，各有各的道理。有人甚至会问，把架构一步到位做好是不是更好？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]软件架构——业务、架构和技术三者的关系</title>
      <link>https://wukn.github.io/2018/05/07/architecutre-talks-business-architeture-technology/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/07/architecutre-talks-business-architeture-technology/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在软件设计开发的过程中经常会看到，很多所谓的架构讨论实际上只是在讨论某些技术。有些人，特别是软件工程师，认为架构和技术实际上是等同的。多学会了几种技术，就觉得可以做架构师了。或者学会的技术越多，就觉得自己的架构水平越高。往往还看不上业务。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]软件架构——软件的生命周期与软件架构</title>
      <link>https://wukn.github.io/2018/05/06/architecutre-talks-software-lifecycle-and-architecture/</link>
      <pubDate>Sun, 06 May 2018 10:24:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/06/architecutre-talks-software-lifecycle-and-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;一个软件，因为i某个业务的需要而产生，后续不断地更新、修改，推动软件逐渐变异、长大。当软件不再被需要（因业务的变化），或有更好的软件来替代时，该软件就会被废弃，完成使命而消亡。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]认识架构——识别问题和切分的原则</title>
      <link>https://wukn.github.io/2018/04/30/architecutre-talks-identify-issue-and-split/</link>
      <pubDate>Mon, 30 Apr 2018 10:24:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/04/30/architecutre-talks-identify-issue-and-split/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;做好架构首先需要做的就是识别出需要解决的问题，也就是核心生命周期。一般来说，如果把真正的问题找到，把核心生命周期找到，问题就已经解决八成了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]认识架构——什么是架构</title>
      <link>https://wukn.github.io/2018/04/29/architecutre-talks-what-is-architecture/</link>
      <pubDate>Sun, 29 Apr 2018 08:30:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/04/29/architecutre-talks-what-is-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;正如我们的生命周期，除了那些别人无法替代必须要由自己来完成的核心生命周期活动（吃饭、睡觉等）外，把其他的生命周期活动并行起来，在同样多的时间内做更多的事情。如何做到这一点呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[聊聊架构]认识架构——生命周期</title>
      <link>https://wukn.github.io/2018/04/28/architecutre-talks-lifecycle/</link>
      <pubDate>Sat, 28 Apr 2018 00:24:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/04/28/architecutre-talks-lifecycle/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;人类自古以来就在研究自身的生灭问题，也就是生死问题。西方称之为生命周期。这个问题隐藏在每个人的言行举止中，人们经常为之深深地恐惧。这种恐惧的心理驱使着人们做出种种的努力，来延缓甚至避免这个结果，虽然人们明知无法避免。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[shell] 删除文件夹下部分文件</title>
      <link>https://wukn.github.io/2017/11/15/delete-some-files-in-shell/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2017/11/15/delete-some-files-in-shell/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;有时候我们会遇到这种情况，需要删除一个文件夹下的部分文件，例如指定后缀的文件、指定前缀的文件等。我们可以使用rm、find、globignore来实现该目标。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[k8s] 部署kubernetes集群——（六）部署Traefik</title>
      <link>https://wukn.github.io/2017/10/18/install-kubernetes-cluster-v1.8.0-deploy-traefik/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2017/10/18/install-kubernetes-cluster-v1.8.0-deploy-traefik/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Traefik是一款开源的反向代理与负载均衡工具。它可以与常见的微服务系统直接整合，可以实现自动化动态配置。它原生支持Kubernetes作为后端。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[k8s] 部署kubernetes集群——（五）部署DNS、Dashboard和Heapster插件</title>
      <link>https://wukn.github.io/2017/10/09/install-kubernetes-cluster-v1.8.0-deploy-dns-dashboard-heapster/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2017/10/09/install-kubernetes-cluster-v1.8.0-deploy-dns-dashboard-heapster/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在Kubernetes集群内部署DNS、Dashboard和Heapster插件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[k8s] 部署kubernetes集群——（三）部署Master节点</title>
      <link>https://wukn.github.io/2017/10/08/install-kubernetes-cluster-v1.8.0-deploy-master/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2017/10/08/install-kubernetes-cluster-v1.8.0-deploy-master/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Kubernetes master节点上需要kube-apiserver、kube-scheduler、kube-controller-manager。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;同一时刻只有一个kube-scheduler和kube-controller-manager实例处于工作状态。为了master的高可用，我们会在每个master节点上都部署一套kube-scheduler和kube-controller-manager，它们之间通过选举产生一个leader。&lt;/p&gt;

&lt;p&gt;master节点与node节点上的Pods通过pod网络通信，因此需要在master节点上部署flannel网络。上一篇已经说了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[k8s] 部署kubernetes集群——（四）部署Node节点</title>
      <link>https://wukn.github.io/2017/10/08/install-kubernetes-cluster-v1.8.0-deploy-node/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2017/10/08/install-kubernetes-cluster-v1.8.0-deploy-node/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Kubernetes node节点上需要docker、flannel、kublet和kube-proxy。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;flannel的部署参见上上篇。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[k8s] 部署kubernetes集群——（二）部署etcd和flannel</title>
      <link>https://wukn.github.io/2017/10/01/install-kubernetes-cluster-v1.8.0-deploy-master/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2017/10/01/install-kubernetes-cluster-v1.8.0-deploy-master/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Kubernetes使用etcd存储集群状态数据。因此需要部署一个etcd集群，这里复用master的三台机器。&lt;/p&gt;

&lt;p&gt;Kubernetes集群的Pod之前需要能相互通信，这里使用flannel搭建vxlan网络。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[k8s] 部署kubernetes集群——（一）准备工作</title>
      <link>https://wukn.github.io/2017/10/01/install-kubernetes-cluster-v1.8.0-prepare/</link>
      <pubDate>Sun, 01 Oct 2017 15:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2017/10/01/install-kubernetes-cluster-v1.8.0-prepare/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Kubernetes集群节点分为master和node角色，master节点上需要kube-apiserver、kube-scheduler、kube-controller-manager。node节点上需要flannel、docker、kubelet、kube-proxy。master的高可用依赖etcd。集群内容器通信使用flannel搭建的vxlan网络。组件之间的通信使用TLS证书进行加密。使用时通常还需要kubedns、dashboard、heapster、docker registry等组组件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://wukn.github.io/about/</link>
      <pubDate>Sun, 24 Sep 2017 17:52:44 +0800</pubDate>
      
      <guid>https://wukn.github.io/about/</guid>
      <description>Expand your universe.
Write the Code. Change the World.
 wukn</description>
    </item>
    
    <item>
      <title>微服务</title>
      <link>https://wukn.github.io/2017/08/20/microservices/</link>
      <pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/08/20/microservices/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;微服务文集&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>恰如其分的软件架构</title>
      <link>https://wukn.github.io/2017/08/06/properly-architecture/</link>
      <pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/08/06/properly-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;恰如其分的软件架构&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>分布式存储系统</title>
      <link>https://wukn.github.io/2017/07/23/distribute-storage-system/</link>
      <pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/07/23/distribute-storage-system/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;分布式存储系统&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>云计算基础架构及关键应用</title>
      <link>https://wukn.github.io/2017/06/09/cloud-architecture/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/06/09/cloud-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;云计算基础架构及关键应用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[设计模式]行为型模式</title>
      <link>https://wukn.github.io/2017/04/04/oo-design-pattern-behavior/</link>
      <pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/04/04/oo-design-pattern-behavior/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;行为型模式用于处理类或对象的交互和职责分配。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[设计模式]结构型模式</title>
      <link>https://wukn.github.io/2017/03/29/oo-design-pattern-structure/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/29/oo-design-pattern-structure/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;结构型模式用于处理类或对象的组合。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[设计模式]创建型模式</title>
      <link>https://wukn.github.io/2017/03/24/oo-design-pattern-create/</link>
      <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/24/oo-design-pattern-create/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;创建型模式用于处理对象的创建。&lt;/p&gt;

&lt;p&gt;创建型模式用各种方法创建或组合各种类型的对象,并向对象的使用者隐藏对象的创建过程。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[设计模式]总览</title>
      <link>https://wukn.github.io/2017/03/22/oo-design-pattern-overview/</link>
      <pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/22/oo-design-pattern-overview/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;设计模式是把过去成功的并且被重复使用的设计经验以人们能够有效利用的方式记录下来。&lt;/p&gt;

&lt;p&gt;在软件工程中，设计模式（Design Pattern）是对软件设计中普遍存在（反复出现）的各种问题，所提出的解决方案。设计模式并不是直接用来完成代码的编写的，而是描述在各种不同情况下，要怎样解决问题的一种方案。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>面向对象的SOILD原则</title>
      <link>https://wukn.github.io/2017/03/20/oo-solid/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/20/oo-solid/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;SOLID（单一职责、开放闭合、里氏替换、接口隔离以及依赖倒置）。&lt;/p&gt;

&lt;p&gt;在程序设计领域， SOLID（单一职责、开放闭合、里氏替换、接口隔离以及依赖倒置）指代了面向对象编程和面向对象设计的五个基本原则。当这些原则一起使用时，它们使得开发的系统易于维护和扩展变成可能。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 模块</title>
      <link>https://wukn.github.io/2017/03/16/python3-module/</link>
      <pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/16/python3-module/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python3 模块。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 函数</title>
      <link>https://wukn.github.io/2017/03/15/python3-functions/</link>
      <pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/15/python3-functions/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python3 函数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 控制流</title>
      <link>https://wukn.github.io/2017/03/14/python3-control-flow/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/14/python3-control-flow/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python3 控制流。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 映射（字典）</title>
      <link>https://wukn.github.io/2017/03/13/python3-map-dict/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/13/python3-map-dict/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python3 映射——字典。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 集合</title>
      <link>https://wukn.github.io/2017/03/12/python3-set/</link>
      <pubDate>Sun, 12 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/12/python3-set/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python3 集合。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 序列（列表、元组、Range）</title>
      <link>https://wukn.github.io/2017/03/11/python3-sequence-list-tuple-range/</link>
      <pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/11/python3-sequence-list-tuple-range/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python3 序列——列表、元组、Range。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 序列（字符串）</title>
      <link>https://wukn.github.io/2017/03/10/python3-sequence-string/</link>
      <pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/10/python3-sequence-string/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python3 序列——字符串。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 序列</title>
      <link>https://wukn.github.io/2017/03/09/python3-sequence/</link>
      <pubDate>Thu, 09 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/09/python3-sequence/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;序列类型（Sequence Types）是包含一组成员的连续列表，这些成员紧邻排列，并且可以通过序号（下标偏移量）访问其中的一个或多个成员。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;基础的序列类型有：列表（list）、元组（tuple）和range。字符串（string）也是序列的一种。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 数值</title>
      <link>https://wukn.github.io/2017/03/08/python3-numbers/</link>
      <pubDate>Wed, 08 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/08/python3-numbers/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python中的数值分为整型（int）、浮点型（float）和复数（complex）。还有一个布尔型（bool）是整型的子类型。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Python3] 简介</title>
      <link>https://wukn.github.io/2017/03/07/python3-introduction/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/07/python3-introduction/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Python是一门功能强大的编程语言，它具有高效的高级数据结构和简单而有效的面向对象编程的特性。Python优雅的语法和动态类型、以及其解释性的性质，决定了它适合脚本编写和快速开发应用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Hierarchical Injectors</title>
      <link>https://wukn.github.io/2017/03/06/angular2-hierarchical-injectors/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/06/angular2-hierarchical-injectors/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Angular的层级依赖注入系统支持与组件树并行的嵌套注入。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Component Styles</title>
      <link>https://wukn.github.io/2017/03/04/angular2-component-styles/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/04/angular2-component-styles/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;让我们来看看如何为组件添加CSS样式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Attribute Directives</title>
      <link>https://wukn.github.io/2017/03/01/angular2-attribute-directives/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/03/01/angular2-attribute-directives/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;属性指令用于改变DOM元素的外观或行为。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Animations</title>
      <link>https://wukn.github.io/2017/01/14/angular2-animations/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/01/14/angular2-animations/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;看一看Angular2的动画系统。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] NgModule</title>
      <link>https://wukn.github.io/2017/01/11/angular2-ngmodules/</link>
      <pubDate>Wed, 11 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/01/11/angular2-ngmodules/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;使用@NgModule定义应用的模块。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Case Study -HTTP</title>
      <link>https://wukn.github.io/2017/01/05/angular2-case-study-http/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/01/05/angular2-case-study-http/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;使用TypeScript构建Angular2应用。将服务改成HTTP服务。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Case Study - Routing</title>
      <link>https://wukn.github.io/2017/01/04/angular2-case-study-routing/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/01/04/angular2-case-study-routing/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;使用TypeScript构建Angular2应用。使用路由功能在多个视图之间导航。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Structural Directives</title>
      <link>https://wukn.github.io/2017/01/03/angular2-structural-directives/</link>
      <pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2017/01/03/angular2-structural-directives/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Angular提供了一个强大的模板引擎供去我们来操作DOM结构中的元素。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Case Study - Multiple Components and Services</title>
      <link>https://wukn.github.io/2016/12/30/angular2-case-study-multiple-components/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/30/angular2-case-study-multiple-components/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;使用TypeScript构建Angular2应用。多组件交互和服务。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Case Study</title>
      <link>https://wukn.github.io/2016/12/26/angular2-case-study/</link>
      <pubDate>Mon, 26 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/26/angular2-case-study/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;用一个案例学习如何构建Angular2应用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Template Syntax</title>
      <link>https://wukn.github.io/2016/12/25/angular2-template-syntax/</link>
      <pubDate>Sun, 25 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/25/angular2-template-syntax/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;让我们看看如何编写模板来展示数据和利用数据绑定处理用户事件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Dependency Injection</title>
      <link>https://wukn.github.io/2016/12/24/angular2-dependency-injection/</link>
      <pubDate>Sat, 24 Dec 2016 01:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/24/angular2-dependency-injection/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Angular的依赖注入系统会准时（just-in-time）创建和传递依赖的服务。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Forms</title>
      <link>https://wukn.github.io/2016/12/24/angular2-forms/</link>
      <pubDate>Sat, 24 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/24/angular2-forms/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Angular表单通常包含控件数据绑定、变化跟踪、输入验证、错误展示等。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] User Input</title>
      <link>https://wukn.github.io/2016/12/21/angular2-user-input/</link>
      <pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/21/angular2-user-input/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;用户操作出发DOM事件。我们通过事件绑定来监听事件，将更新的值回写到组件和数据模型中。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Displaying Data</title>
      <link>https://wukn.github.io/2016/12/14/angular2-displaying-data/</link>
      <pubDate>Wed, 14 Dec 2016 01:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/14/angular2-displaying-data/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;利用属性绑定在UI中显示数据。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Root Module</title>
      <link>https://wukn.github.io/2016/12/14/angular2-root-module/</link>
      <pubDate>Wed, 14 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/12/14/angular2-root-module/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;根模块是用来告诉Angular如何构建和启动应用的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Architecture Overview</title>
      <link>https://wukn.github.io/2016/11/30/angular2-architecture-overview/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/30/angular2-architecture-overview/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Angular是一个使用HTML和JavaScript或能编译成JavaScript的TypeScript等编写客户端应用的框架。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Angular2] Quick Start</title>
      <link>https://wukn.github.io/2016/11/29/angluar2-quick-start/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/29/angluar2-quick-start/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;使用TypeScript构建Angular2应用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Kafka]Kafka运维</title>
      <link>https://wukn.github.io/2016/11/28/kafka-operation/</link>
      <pubDate>Mon, 28 Nov 2016 06:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/28/kafka-operation/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《Learing Apache Kafka-Second Edition》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Kafka]集成Kafka</title>
      <link>https://wukn.github.io/2016/11/28/kafka-integration/</link>
      <pubDate>Mon, 28 Nov 2016 05:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/28/kafka-integration/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《Learing Apache Kafka-Second Edition》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Kafka]开发Consumer</title>
      <link>https://wukn.github.io/2016/11/28/kafka-consumer-development/</link>
      <pubDate>Mon, 28 Nov 2016 04:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/28/kafka-consumer-development/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《Learing Apache Kafka-Second Edition》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Kafka]开发Producer</title>
      <link>https://wukn.github.io/2016/11/28/kafka-producer-development/</link>
      <pubDate>Mon, 28 Nov 2016 03:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/28/kafka-producer-development/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《Learing Apache Kafka-Second Edition》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Kafka]Kafka设计</title>
      <link>https://wukn.github.io/2016/11/28/kafka-design/</link>
      <pubDate>Mon, 28 Nov 2016 02:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/28/kafka-design/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《Learing Apache Kafka-Second Edition》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Kafka]部署Kafka集群</title>
      <link>https://wukn.github.io/2016/11/28/kafka-cluster/</link>
      <pubDate>Mon, 28 Nov 2016 01:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/28/kafka-cluster/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《Learing Apache Kafka-Second Edition》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][Kafka]Kafka简介</title>
      <link>https://wukn.github.io/2016/11/28/kafka-introduction/</link>
      <pubDate>Mon, 28 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/28/kafka-introduction/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《Learing Apache Kafka-Second Edition》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在当前的大数据时代，第一个挑战是海量数据的收集，另一个就是这些数据的分析。数据分析的类型通常有用户行为数据、应用性能跟踪数据、活动数据日志、事件消息等。消息发布机制用于连接各种应用并在它们之间路由消息，例如通过message broker。Kafka是快速地将海量信息实时路由到消费者的解决方案，实现信息的生产者和消费者的无缝集成。它不会阻塞信息的生产者，同时信息生产者不会知道信息消费者。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Mapping</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-mapping/</link>
      <pubDate>Sat, 12 Nov 2016 10:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-mapping/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Microtask queue</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-microtask-queue/</link>
      <pubDate>Sat, 12 Nov 2016 09:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-microtask-queue/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Rate-limiting observable notification</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-ratelimit-observable/</link>
      <pubDate>Sat, 12 Nov 2016 08:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-ratelimit-observable/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Deferred update</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-deferred-update/</link>
      <pubDate>Sat, 12 Nov 2016 07:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-deferred-update/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Extending observables</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-extending-observables/</link>
      <pubDate>Sat, 12 Nov 2016 06:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-extending-observables/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] JSON</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-work-with-json/</link>
      <pubDate>Sat, 12 Nov 2016 05:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-work-with-json/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Components</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-components/</link>
      <pubDate>Sat, 12 Nov 2016 04:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-components/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Bindings - Creating custom binding</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-bindings-creating-custom-binding/</link>
      <pubDate>Sat, 12 Nov 2016 03:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-bindings-creating-custom-binding/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Bindings - Syntax</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-bindings-syntax/</link>
      <pubDate>Sat, 12 Nov 2016 02:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-bindings-syntax/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Bindings - Template</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-bindings-template/</link>
      <pubDate>Sat, 12 Nov 2016 01:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-bindings-template/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Bindings - Control flow</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-bindings-control-flow/</link>
      <pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-bindings-control-flow/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Bindings - Work with form fields</title>
      <link>https://wukn.github.io/2016/11/12/knockoutjs-bindings-work-with-form-fields/</link>
      <pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/12/knockoutjs-bindings-work-with-form-fields/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Bindings - Controlling text and appearence</title>
      <link>https://wukn.github.io/2016/11/05/knockoutjs-bindings-controlling-text-and-appearence/</link>
      <pubDate>Sat, 05 Nov 2016 02:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/05/knockoutjs-bindings-controlling-text-and-appearence/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Observables</title>
      <link>https://wukn.github.io/2016/11/05/knockoutjs-observables/</link>
      <pubDate>Sat, 05 Nov 2016 01:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/05/knockoutjs-observables/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][KnockoutJS] Introduction</title>
      <link>https://wukn.github.io/2016/11/05/knockoutjs-introduction/</link>
      <pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/11/05/knockoutjs-introduction/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;KnockoutJS文档官网：&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&amp;quot;&#34;&gt;http://knockoutjs.com/documentation/introduction.html&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][RabbitMQ] Clustering and High Availability</title>
      <link>https://wukn.github.io/2016/10/21/rabbitmq-clustering-ha/</link>
      <pubDate>Mon, 24 Oct 2016 04:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/21/rabbitmq-clustering-ha/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;使用RabitMQ构建RPC应用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][RabbitMQ] Remote Procedure Call</title>
      <link>https://wukn.github.io/2016/10/24/rabbitmq-rpc/</link>
      <pubDate>Mon, 24 Oct 2016 03:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/24/rabbitmq-rpc/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;使用RabitMQ构建RPC应用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][RabbitMQ] Publish/Subscribe、Routing、Topic</title>
      <link>https://wukn.github.io/2016/10/24/rabbitmq-publish-subscribe-routing-topic/</link>
      <pubDate>Mon, 24 Oct 2016 02:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/24/rabbitmq-publish-subscribe-routing-topic/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;发布订阅模式下，一个消息会被传递给多个consumer。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][RabbitMQ] Work Queues</title>
      <link>https://wukn.github.io/2016/10/24/rabbitmq-work-queues/</link>
      <pubDate>Mon, 24 Oct 2016 01:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/24/rabbitmq-work-queues/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;RabbitMQ是一个message broker，本质上就是接收producer的消息，传递给consumer，其中可以根据给定的需要设置消息路由、缓存、持久化。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][RabbitMQ] Introduction</title>
      <link>https://wukn.github.io/2016/10/24/rabbitmq-introduction/</link>
      <pubDate>Mon, 24 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/24/rabbitmq-introduction/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;RabbitMQ是一个messaging broker，一个消息传递的中介。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][软件架构模式]-基于空间的架构Space-based Architecture</title>
      <link>https://wukn.github.io/2016/10/21/space-based-architecture/</link>
      <pubDate>Fri, 21 Oct 2016 04:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/21/space-based-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;大部分Web应用的处理流程为：浏览器发起的请求精经过Web服务器、应用服务器和数据库服务器的处理。当用户量不大时这样的模式没有任何问题。但随着用户访问量的增加，系统开始出现性能瓶颈，首先是Web服务器层，其次是应用服务器层，最后是数据库服务器层。处理的措施通常是水平扩展Web服务器。这是比较容易实现的。但是用户量过大时，水平扩展Web服务层后，瓶颈会转移到应用服务层。应用服务层的水平扩展相对比较复杂一些了，也会导致瓶颈转移到数据库服务层。而数据库服务层扩展起来代价更高。&lt;/p&gt;

&lt;p&gt;对于有大量用户并发访问的应用，通常数据库的并发处理事务量是关键的限制因素。尽管有很多缓存技术和数据库扩展工具可以解决该问题，但事实上扩展出可承受极端负载的应用是很难的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][软件架构模式]-微服务架构Microservices Architecture</title>
      <link>https://wukn.github.io/2016/10/21/microservices-architecture/</link>
      <pubDate>Fri, 21 Oct 2016 03:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/21/microservices-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;微服务架构是个正在快速发展的架构，可替代独立应用程序和面向服务架构（service-oriented architecture）。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][软件架构模式]-微内核架构Microkernel Architecture</title>
      <link>https://wukn.github.io/2016/10/21/microkernel-architecture/</link>
      <pubDate>Fri, 21 Oct 2016 02:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/21/microkernel-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;微内核架构有时也被成为插件架构模式（plug-in architecture pattern），通常用于实现基于产品的应用，如Eclipse和Firefox。然而许多公司也将内部的业务软件做成软件产品，提供版本、发版说明和插件特性。微内核架构模式通过插件向核心应用添加额外的功能，提供了可扩展性和功能的独立和分离。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][软件架构模式]-事件驱动架构Event-Driven Architecture</title>
      <link>https://wukn.github.io/2016/10/21/event-driven-architecture/</link>
      <pubDate>Fri, 21 Oct 2016 01:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/21/event-driven-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;事件驱动架构是个流行的分布式异步架构模式，用于构建高伸缩性的应用。它有很高的适应性，既适用于小型应用，也适合大型复杂应用。事件驱动架构是由高度解耦的、目标单一、可异步接收和处理事件的组件组成。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译][软件架构模式]-分层架构Layered Architecture</title>
      <link>https://wukn.github.io/2016/10/21/layered-architecture/</link>
      <pubDate>Fri, 21 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/21/layered-architecture/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;分层架构模式是最常用的架构模式，也被成为N层架构模式。大部分架构师、设计者、开发者都熟知该模式。它与传统的IT通信和组织结构十分匹配，因此大部分业务应用开发自然而然选择它。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Start</title>
      <link>https://wukn.github.io/2016/10/14/start/</link>
      <pubDate>Fri, 14 Oct 2016 15:00:00 +0000</pubDate>
      
      <guid>https://wukn.github.io/2016/10/14/start/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Stay Hungry, Stay Foolish.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>