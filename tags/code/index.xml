<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on wukn blog</title>
    <link>https://wukn.github.io/tags/code/</link>
    <description>Recent content in Code on wukn blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 03 Jun 2018 10:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://wukn.github.io/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[精耕]代码整洁之道——格式</title>
      <link>https://wukn.github.io/2018/06/03/clean-code-style/</link>
      <pubDate>Sun, 03 Jun 2018 10:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/03/clean-code-style/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;你应该保持良好的代码格式。应该选用一套管理代码格式的简单规则，然后贯彻这些规则。格式很重要。代码格式关乎沟通，而沟通是专业开发者的头等大事。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[精耕]代码整洁之道——注释</title>
      <link>https://wukn.github.io/2018/06/03/clean-code-comment/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/03/clean-code-comment/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;什么也比不上放置良好的注释来得有用。什么也不会比乱七八糟的注释更有本事搞乱一个模块。什么也不会比陈旧、提出错误信息的注释更有破坏性。若变成语言足够有表达力，或者我们长于用这些语言来表达意图，就不那么需要注释了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[精耕]代码整洁之道——函数</title>
      <link>https://wukn.github.io/2018/06/02/clean-code-function/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/06/02/clean-code-function/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;函数是所有程序中的第一组代码。一起看看如何写好函数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[精耕]代码整洁之道——有意义的命名</title>
      <link>https://wukn.github.io/2018/05/30/clean-code-meaningful-names/</link>
      <pubDate>Wed, 30 May 2018 23:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/30/clean-code-meaningful-names/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;软件之中随处可见命名。我们给变量、函数、参数、类和包命名。我们给源代码及源代码所在目录命名。我们给jar文件命名。既然有那么多命名要做，不妨做好它。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[精耕]代码整洁之道——整洁代码</title>
      <link>https://wukn.github.io/2018/05/27/clean-code-clean-code/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://wukn.github.io/2018/05/27/clean-code-clean-code/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;细节之中自有天地，整洁成就卓越代码。代码质量与其整洁度成正比。干净的代码，既在质量上较为可靠，也为后期维护、升级奠定了良好了基础。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>